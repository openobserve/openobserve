[package]
name = "zinc-observe"
version = "0.1.0"
edition = "2021"
description = "ZincObserve is a search platform built specifically for log search & analytics. One can use it to search & analyze terabytes of logs."
homepage = "https://zinc.dev/"
repository = "https://github.com/zinclabs/zinc-observe/"
keywords = ["search", "log", "metrics", "traces", "analytics"]
license = "AGPL-3.0"
# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
mimalloc = ["dep:mimalloc"]
tmpcache = ["dep:rsfs"]

[profile.release]
debug = false
debug-assertions = false
overflow-checks = false
strip = true

[dependencies]
anyhow = "1.0"
thiserror = "1.0"
log = "0.4.17"
futures = "0.3"
futures-util = "0.3.25"
tokio = { version = "1", features = ["full"] }
serde = { version = "1", features = ["derive"] }
serde_json = "1"
simd-json = "0.7.0"
flatten-json-object = "0.6.1"
actix-web = "4.2"
actix-web-httpauth = "0.8"
actix-web-prometheus = "0.1.2"
actix-cors = "0.6.4"
prometheus = "0.13.3"
env_logger = "0.9"
dotenv = "0.15.0"
dotenv_config = "0.1.3"
prost = "0.11.2"
tonic = { version = "0.8", features = ["prost", "gzip"] }
sqlparser = { version = "0.30", features = ["serde"] }
arrow = { version = "31.0", features = ["simd", "ipc_compression"] }
arrow-schema = { version = "31.0", features = ["serde"] }
parquet = { version = "31.0", features = ["arrow", "async"] }
datafusion = { version = "17.0", features = ["simd"] }
datafusion-common = "17.0"
object_store = { version = "0.5.3", features = ["aws", "gcp"] }
etcd-client = { version = "0.10.2", features = ["tls"] }
sled = "0.34.7"
aws-config = "0.51.0"
aws-types = "0.51.0"
aws-sdk-s3 = "0.21.0"
zstd = "0.12.1"
chrono = "0.4"
rs-snowflake = "0.6.0"
lazy_static = "1.4.0"
async-trait = "0.1.57"
async_once = "0.2.6"
once_cell = "1.15.0" 
glob = "0.3.0"
walkdir = "2"
bytes = "1.1"
memchr = "2.5.0"
rand = "0.8.5"
regex = "1"
regex-syntax = "0.6.27"
sys-info = "0.9.1"
get_if_addrs = "0.5.3"
lru = "0.8.1"
mimalloc = { version = "0.1", default-features = false, optional = true }
uuid = { version = "1.2.2", features = ["v4", "fast-rng", "macro-diagnostics"] }
mlua = { version = "0.8.4", features = ["luajit52", "vendored" ,"serialize"] }
ahash = { version = "0.8.3", features = ["serde"] }
dashmap = { version = "5.4.0", features = ["serde"] }
argon2 = {version =  "0.4.1" ,features = ["alloc", "password-hash"]}
snap = "1"
utoipa = { version = "3", features = ["actix_extras","openapi_extensions"] }
utoipa-swagger-ui = { version = "3", features = ["actix-web"] }
parking_lot = "0.12"
url = "2.2"
rsfs = { version = "0.4.1", optional = true }
http-auth-basic = "0.3.3"
opentelemetry = { version = "0.17", features = ["rt-tokio"] }
tracing = "0.1"
tracing-opentelemetry = "0.17"
tracing-subscriber = { version = "0.3", features = ["tracing-log" ,"env-filter"] }
opentelemetry-proto = { version = "0.1",  features = ["gen-tonic","traces","with-serde","build-server"]  }
opentelemetry-otlp  = { version = "0.10", features = ["http-proto", "serialize" , "reqwest-client"] }
actix-web-opentelemetry = { version = "0.12", features = ["metrics"] }
actix-web-rust-embed-responder = { version = "2.1.1", default-features = false, features = ["support-rust-embed-for-web", "base64"] }
rust-embed-for-web="11.1.0"
awc = "3.1.0"
reqwest = { version = "0.11", default-features = false, features = ["rustls-tls"] }
segment = "0.2.2"
time = "0.3.17"

[build-dependencies]
tonic-build = { version = "0.8", features = ["prost"] }
prost-build = { version = "0.11.2" }
