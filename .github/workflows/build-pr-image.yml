
name: Build PR Docker Image

on:
  pull_request:
    branches:
      - "*"
    paths-ignore:
      - "**.md"
env:
    AWS_REGION: us-east-1

jobs:
    build_pr_image:
      name: build_pr_image
      permissions:
        id-token: write
        contents: read
      runs-on: ${{ github.event.pull_request.head.repo.fork == true && 'ubuntu-2004-8-cores' || 'ubicloud-standard-8' }}
      steps:
        - name: Remove unused tools
          run: |
            sudo rm -rf /usr/share/dotnet
            sudo rm -rf /opt/ghc
            sudo rm -rf "/usr/local/share/boost"
            sudo rm -rf "$AGENT_TOOLSDIRECTORY"
  
        - name: Clone the current repo
          uses: actions/checkout@v4
          with:
            repository: ${{ github.event.pull_request.head.repo.full_name }}
            ref: ${{ github.event.pull_request.head.ref || github.ref }}
            fetch-depth: 0
            fetch-tags: true
  
        - name: Setup Rust Toolchain
          uses: dtolnay/rust-toolchain@master
          with:
            toolchain: nightly-2024-03-02
            
        - uses: Swatinem/rust-cache@v2
          with:
            cache-on-failure: true
        - name: Install Protoc
          uses: arduino/setup-protoc@v3
          with:
            version: "21.12"
        - uses: actions/setup-node@v4
          with:
            node-version: 18
        
        - name: Build frontend code
          run: cd web && npm install && npm run build
        
        - name: Print rustc cfg
          run: rustc --print cfg
          
        - name: Build and run binary
          run: |
            cargo build --release --features mimalloc --target x86_64-unknown-linux-gnu
            mkdir -p bin
            mv target/x86_64-unknown-linux-gnu/release/openobserve bin/openobserve
     
        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
            aws-region: ${{ env.AWS_REGION }}
            role-to-assume: arn:aws:iam::058694856476:role/GitHubActionsRole
            role-session-name: GithubActionsSession
  
        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v2          
          with:
            registry-type: public
  
        - name: Set up QEMU
          uses: docker/setup-qemu-action@v3
         
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3

        - name: Set GIT_TAG env
          run: |
            echo "GIT_TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
            echo "GIT_HASH=$(git rev-parse --short=7 HEAD)" >> $GITHUB_ENV
     
        - name: Build and push
          uses: docker/build-push-action@v5
          with:
            file: deploy/build/Dockerfile.pr.amd64
            context: .
            tags: |
              public.ecr.aws/zinclabs/openobserve-dev:${{ env.GIT_TAG }}-${{ env.GIT_HASH}}-amd64
            push: true
            cache-from: type=gha
            cache-to: type=gha,mode=max