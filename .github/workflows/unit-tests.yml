name: Unit tests

on:
  push:
    branches:
      - "main"
    paths-ignore:
      - "**.md"
  pull_request:
    branches:
      - "*"
    paths-ignore:
      - "**.md" 

env:
  COLUMNS: 150
  ZO_RESULT_CACHE_ENABLED: true

jobs:
  unit_tests:

    runs-on: 
      labels: ubicloud-standard-8

    services:
      postgres:
        image: postgres:17.5-alpine3.22
        env:
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:

      - name: Clone the current repo
        uses: actions/checkout@v4

      # - name: Install postgres and Mysql
      #   run: sudo apt-get update && sudo apt-get install -y postgresql mysql-server

      - name: Setup Rust Toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2025-03-02
          targets: x86_64-unknown-linux-gnu
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          version: "21.12"

      
      - name: Simulate building frontend code
        run: mkdir -p web/dist && touch web/dist/index.html
      
      - name: Print rustc cfg
        run: rustc -C target-cpu=native --print cfg

      # - name: Setup cargo config
      #   run: cargo --config net.git-fetch-with-cli=true clippy -- -D warnings

      - name: Run unit tests
        run: |
          export ZO_META_STORE=postgres
          export ZO_META_POSTGRES_DSN=postgres://postgres:password@localhost:5432/postgres
          ./coverage.sh run-cov
          rm -r data
      
