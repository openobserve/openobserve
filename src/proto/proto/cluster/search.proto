syntax = "proto3";

option java_multiple_files = true;
option java_package = "org.openobserve.cluster";
option java_outer_classname = "searchProto";

package cluster;

import "cluster/common.proto";

service Search {
    rpc QueryStatus(QueryStatusRequest) returns (QueryStatusResponse) {}
    rpc CancelQuery(CancelQueryRequest) returns (CancelQueryResponse) {}
    rpc ClusterCancelQuery(CancelQueryRequest) returns (CancelQueryResponse) {}
    rpc Search(SearchRequest) returns (SearchResponse) {}
    rpc SearchPartition(SearchPartitionRequest) returns (SearchPartitionResponse) {}
    rpc GetResult(GetResultRequest) returns (GetResultResponse) {}
    rpc DeleteResult(DeleteResultRequest) returns (DeleteResultResponse) {}
}

message QueryStatusRequest {}

message QueryStatusResponse {
    repeated QueryStatus status = 1;
}

message CancelQueryRequest {
    string trace_id = 1;
}

message CancelQueryResponse {
    bool is_success = 1;
}

message SearchRequest {
    string             trace_id = 1;
    string               org_id = 2;
    string          stream_type = 3;
    optional string     user_id = 4;
    bytes               request = 5;
}

message SearchResponse {
    string             trace_id = 1;
    bytes              response = 2;
}


message SearchPartitionRequest {
    string             trace_id = 1;
    string               org_id = 2;
    string          stream_type = 3;
    bytes               request = 5;
    bool   skip_max_query_range = 6; 
}

message SearchPartitionResponse {
    string             trace_id = 1;
    bytes              response = 2;
}

message DeleteResultRequest {
    repeated string paths = 1;
}

message DeleteResultResponse {}

message GetResultRequest {
    string           path = 1;
}

message GetResultResponse {
    bytes        response = 1;
}

// Search request query
message SearchQuery {
    string              sql = 1;
    bool         quick_mode = 3;
    int32              from = 4;
    int32              size = 5;
    int64        start_time = 6;
    int64          end_time = 7;
    bool   track_total_hits = 9;
    string      query_type = 10;
    bool        uses_zo_fn = 12;
    string        query_fn = 13;
    bool          skip_wal = 14;
    string       action_id = 15;
}



message QueryStatus {
    string                trace_id = 1;
    int64               created_at = 2;
    int64               started_at = 3;
    bool                  is_queue = 4;
    optional string        user_id = 5;
    optional string         org_id = 6;
    optional string    stream_type = 7;
    optional Query           query = 8;
    optional ScanStats  scan_stats = 9;
    optional WorkGroup work_group = 10;
    optional string   search_type = 11;
}

enum WorkGroup {
    SHORT = 0;
    LONG  = 1;
}

message Query {
    string       sql = 1;
    int64 start_time = 2;
    int64   end_time = 3;
}


