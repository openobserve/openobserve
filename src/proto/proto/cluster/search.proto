syntax = "proto3";

option java_multiple_files = true;
option java_package = "org.openobserve.cluster";
option java_outer_classname = "searchProto";

package cluster;

import "cluster/common.proto";

service Search {
  rpc Search (SearchRequest) returns (SearchResponse) {}
  rpc JobStatus(JobStatusRequest) returns (JobStatusResponse) {}
  rpc CancelJob(CancelJobRequest) returns (CancelJobResponse) {}
}

// Search request query
message SearchQuery {
    string              sql = 1;
    string         sql_mode = 2;
    bool         quick_mode = 3;
    int32              from = 4;
    int32              size = 5;
    int64        start_time = 6;
    int64          end_time = 7;
    string          sort_by = 8;
    bool   track_total_hits = 9;
    string      query_type = 10;
    string   query_context = 11;
    bool        uses_zo_fn = 12;
    string        query_fn = 13;
}

// Search request
message SearchRequest {
    Job                        job = 1;
    string                  org_id = 2;
    string             stream_type = 3;
    SearchType               stype = 4;
    SearchQuery              query = 5;
    repeated FileKey     file_list = 6;
    repeated SearchAggRequest aggs = 7;
    int64                  timeout = 8;
    string              work_group = 9;
}

// The response message containing the greetings
message SearchResponse {
    Job                         job = 1;
    int32                      took = 2;
    int64                     total = 3;
    int32                      from = 4;
    int32                      size = 5;
    bytes                      hits = 6;
    repeated SearchAggResponse aggs = 7;
    ScanStats            scan_stats = 8;
}

message SearchAggRequest {
    string name = 1;
    string  sql = 2;
}

message SearchAggResponse {
    string name = 1;
    bytes  hits = 2;
}

message JobStatusRequest {
}

message JobStatusResponse {
    repeated JobStatus status = 1;
}

message JobStatus {
    string  trace_id = 1;
    int64 created_at = 2;
    int64 started_at = 3;
    bool    is_queue = 4;
    optional string       user_id = 5;
    optional string        org_id = 6;
    optional string   stream_type = 7;
    optional Query          query = 8;
    optional ScanStats scan_stats = 9;
}

message Query {
    string       sql = 1;
    int64 start_time = 2;
    int64   end_time = 3;
}

message CancelJobRequest {
    string trace_id = 1;
}

message CancelJobResponse {
    bool is_success = 1;
}