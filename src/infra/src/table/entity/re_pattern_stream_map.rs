//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "re_pattern_stream_map")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    pub org: String,
    pub stream: String,
    pub stream_type: String,
    pub field: String,
    pub pattern_id: String,
    #[sea_orm(column_type = "Text")]
    pub policy: String,
    pub apply_at: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::re_patterns::Entity",
        from = "Column::PatternId",
        to = "super::re_patterns::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    RePatterns,
}

impl Related<super::re_patterns::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::RePatterns.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
