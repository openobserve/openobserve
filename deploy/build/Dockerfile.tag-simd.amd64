# syntax=docker/dockerfile:1
FROM public.ecr.aws/docker/library/node:18.19.0-bookworm as webBuilder
WORKDIR /web
COPY ./web /web/

RUN npm install
RUN NODE_OPTIONS="--max-old-space-size=8192" npm run build

# FROM public.ecr.aws/docker/library/rust:bookworm as builder
FROM public.ecr.aws/zinclabs/rust:bookworm-sccache as builder
# RUN apt-get update
# RUN apt-get install -y protobuf-compiler
# RUN apt-get install -y cmake curl

# RUN rustup toolchain install nightly-2024-03-02
# RUN rustup default nightly-2024-03-02
# RUN rustup target add x86_64-unknown-linux-gnu

WORKDIR /openobserve
COPY . /openobserve
COPY --from=webBuilder /web/dist web/dist
RUN mkdir -p /openobserve/target/release/

# RUN cargo build --release
RUN RUSTFLAGS='-C target-feature=+avx,+avx2,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+avx512f,+avx512cd,+avx512er,+avx512bw,+avx512dq,+avx512vl' cargo build --profile release-prod --features mimalloc --target x86_64-unknown-linux-gnu
RUN mv /openobserve/target/x86_64-unknown-linux-gnu/release-prod/openobserve /openobserve/target/release/openobserve

FROM gcr.io/distroless/cc-debian12 as runtime
COPY --from=builder /openobserve/target/release/openobserve /
COPY --from=builder /lib/x86_64-linux-gnu/liblzma.so.5 /lib/x86_64-linux-gnu/liblzma.so.5
COPY --from=builder /lib/x86_64-linux-gnu/libz.so.1 /lib/x86_64-linux-gnu/libz.so.1
RUN ["/openobserve", "init-dir", "-p", "/data/"]
CMD ["/openobserve"]
