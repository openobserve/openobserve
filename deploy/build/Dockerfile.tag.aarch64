# syntax=docker/dockerfile:1
FROM public.ecr.aws/docker/library/node:18.19.0-bookworm as webBuilder
WORKDIR /web
COPY ./web /web/

RUN npm install
RUN NODE_OPTIONS="--max-old-space-size=8192" npm run build

# FROM public.ecr.aws/docker/library/rust:bookworm as builder
FROM public.ecr.aws/zinclabs/rust:bookworm-sccache as builder
# RUN apt-get update
# RUN apt-get install -y protobuf-compiler
# RUN apt-get install -y cmake curl

# RUN rustup toolchain install nightly-2024-03-02
# RUN rustup default nightly-2024-03-02
# RUN rustup target add aarch64-unknown-linux-gnu

WORKDIR /openobserve
COPY . /openobserve
COPY --from=webBuilder /web/dist web/dist
RUN mkdir -p /openobserve/target/release/

# RUN cargo build --release
ENV CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc \
  CC_aarch64_unknown_linux_gnu=aarch64-linux-gnu-gcc \
  CXX_aarch64_unknown_linux_gnu=aarch64-linux-gnu-g++
RUN cargo build --profile release-prod --features mimalloc --target aarch64-unknown-linux-gnu
RUN mv /openobserve/target/aarch64-unknown-linux-gnu/release-prod/openobserve /openobserve/target/release/openobserve

FROM gcr.io/distroless/cc-debian12:latest-arm64 as runtime
COPY --from=builder /openobserve/target/release/openobserve /
COPY --from=builder /lib/aarch64-linux-gnu/liblzma.so.5 /lib/aarch64-linux-gnu/liblzma.so.5
COPY --from=builder /lib/aarch64-linux-gnu/libz.so.1 /lib/aarch64-linux-gnu/libz.so.1
RUN ["/openobserve", "init-dir", "-p", "/data/"]
CMD ["/openobserve"]
